semaphore acceso=1; //puerta
semaphore adminIN=1; //administrador
semaphore estSale=1;
int adminAdentro=0;
int habVacia=0;
int cantEst=0;
int cantMax=2;//varia
int numRandom;
int terminaFiesta=0;// no es seguro

void estudiante(int id){
//int x=0;
               
		wait(acceso);
		
		cout<<"Intenta ingresar Estudiante"<<id<<endl;
		if(adminAdentro==1){
			cout<<"Acceso denegado Estudiante  "<<id<<endl;
  			//wait(estSale);  //se hace un proceso critico
			signal(acceso); //dentro del proceso critico liberamos otro (se contradice)
			wait(estSale);
			}else{  
				cout<<"Entra Estudiante "<<id <<" a la habitacion"<<'\n';
				habVacia=1;
				cantEst++;
				cout<<"Hay " <<cantEst<< " estudiantes"<<'\n';
				
				signal(acceso);
				
				
				
                             }
//fuera de else
                             wait(estSale);
                               if(habVacia==1){
				cout<<"	IIISalir Estudiante"<<'\n';
				numRandom = random(3);
				if((terminaFiesta==1)||numRandom==0){   //no hace la comparacion con terminaFies
					cout<<"Sale Estudiante "<<id <<" de la habitacion"<<'\n';
					cantEst--;
					cout<<"Hay " <<cantEst<< " estudiantes"<<'\n';
					if(cantEst==0){
						habVacia=0; //administrador pueda entrar
						signal(adminIN);
						}else{
						signal(estSale);
						}
					
                                  } else{  cout<<"  NO Sale    "<<'\n';  signal(adminIN);  }//si no sale?
                              } //IF habVacia
   // signal(estSale);
}
void administrador(int id){
 while(1){
                   wait(acceso);  //
		    cout<<"	Administrador "<<id<<" intenta ingresar"<<endl;
			if(habVacia==0){
				cout<<"      Entra Administrador"<<id<<endl;	
				cout<<"      Revisa Administrador"<<id<<endl;				
				adminAdentro=1;
				habVacia=1;
				cout<<"      SALE Administrador"<<id<<endl;	
				habVacia=0;
                                adminAdentro=0;
                         }else if(cantEst >= cantMax){
				cout<<"      Entra Administrador"<<id<<" logra ingresar"<<endl;
				cout<<"      Termina la fiesta Administrador"<<id<<endl;	
				cout<<"      Revisa Administrador"<<id<<endl;	
				terminaFiesta=1;
				adminAdentro=1;
				wait(adminIN);
				if(habVacia==0){
					cout<<"      SALE Administrador"<<id<<endl;
					adminAdentro=0;
					signal(adminIN);
				}else{
					signal(estSale);
				}
				

                              }else{ 
				cout<<"      Administrador "<<id<<" acceso denegado"<<endl;
                              }
		  signal(acceso);
 }   
}
void main(){
   cobegin{
                estudiante(1);estudiante(2);estudiante(3);estudiante(4);
		administrador(99);
     }
}