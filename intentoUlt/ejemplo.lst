BACI System: C-- to PCODE Compiler, 12:29  18 Jul 2004
Source file: C:\jbaci\examples\trabajoGrup\intentoUlt\ejemplo.cm  Mon Oct 25 11:43:03 2021
 line  pc
   1    0  semaphore acceso=1; //puerta
   2    0  semaphore adminIN=1; //administrador
   3    0  semaphore estSale=1;
   4    0  int adminAdentro=0;
   5    0  int habVacia=0;
   6    0  int cantEst=0;
   7    0  int cantMax=2;//varia
   8    0  int numRandom;
   9    0  int terminaFiesta=0;// no es seguro
  10    0  int ultSal=0;
  11    0  void estudiante(int id){
  12    0  //int x=0;
  13    0                 
  14    0  		wait(acceso);
  15    2  		
  16    2  		cout<<"Intenta ingresar Estudiante"<<id<<endl;
  17    6  		if(adminAdentro==1){
  18   10  			cout<<"Acceso denegado Estudiante  "<<id<<endl;
  19   14    			//wait(estSale);  //se hace un proceso critico
  20   14  			signal(acceso); //dentro del proceso critico liberamos otro (se contradice)
  21   16  			wait(estSale);
  22   18  			}else{  
  23   19  				cout<<"Entra Estudiante "<<id <<" a la habitacion"<<'\n';
  24   25  				habVacia=1;
  25   28  				cantEst++;
  26   33  				cout<<"Hay " <<cantEst<< " estudiantes"<<'\n';
  27   39  				
  28   39  				signal(acceso);  //entra y puede entrar otro
  29   41  				
  30   41                               } //else estEntra
  31   41  //fuera de else
  32   41                               wait(estSale);
  33   43                                 if(habVacia==1){
  34   47  				cout<<"	IIISalir "<<id<<" Estudiante"<<'\n';
  35   53  				numRandom = random(3);
  36   57  				if(numRandom==0){   
  37   61  					cout<<"Sale Estudiante "<<id <<" de la habitacion"<<'\n';
  38   67  					cantEst--;
  39   72  					cout<<"Hay " <<cantEst<< " estudiantes"<<'\n';
  40   78  					if(cantEst==0){
  41   82  						habVacia=0; //administrador pueda entrar
  42   85  						cout<<"TODOS salieron"<<endl;
  43   87  						signal(adminIN);
  44   89  						}else{
  45   90  						  signal(estSale); //todavia puede salir otro estudiante
  46   92  						}
  47   92  					
  48   92  					
  49   92                                   }else{  
  50   93  					while(1){
  51   95  					  if(terminaFiesta==1 ){
  52   99  						if(id!=ultSal){//no salga de nuevo	
  53  103  						cout<<"Sale Estudiante "<<id <<" de la habitacion"<<'\n';
  54  109  						cantEst--;
  55  114  						cout<<"Hay " <<cantEst<< " estudiantes"<<'\n';
  56  120  						if(cantEst==0){
  57  124  						  habVacia=0; //administrador pueda entrar
  58  127  						  terminaFiesta=0;
  59  130  						  cout<<"TODOS salieron"<<endl;
  60  132  						  ultSal=id;  //no debe poder salir de nuevo
  61  135  						  signal(adminIN);
  62  137  						  
  63  137  						}else{
  64  138  						  //signal(estSale); //todavia puede salir otro estudiante
  65  138  						  signal(adminIN);  //el admin intente salir y libere no asegura que pase estSale=-1
  66  140  						  ultSal=id;
  67  143  						}//cantEs
  68  143  						//sigue habiendo estudiantes
  69  143  						}else{signal(estSale);}//no salga de nuevo							
  70  146  						
  71  146  						//break;//creo que deberia haber un wait
  72  146  					   }else{signal(adminIN);  cout<<"  NO Sale "<<id<<" Estudiante"<<'\n';break;  }//pausar el sale
  73  156  						//se sigue reduciendo el estSal (PROBLEMA)
  74  156  					}//while
  75  157  						
  76  157  					}//si no sale? else
  77  157                                } //IF habVacia
  78  157                
  79  157     // signal(estSale);
  80  157  }
  81  158  void administrador(int id){
  82  158   while(1){
  83  160                     wait(acceso);  //
  84  162  	if(adminAdentro==0){
  85  166  		    cout<<"	Administrador "<<id<<" intenta ingresar"<<endl;
  86  171  	}
  87  171  			if(habVacia==0){
  88  175  				if(adminAdentro==0){
  89  179  				cout<<"      Entra Administrador"<<id<<endl;	
  90  183  				cout<<"      Revisa Administrador"<<id<<endl;				
  91  187  				adminAdentro=1;
  92  190  				}
  93  190  				habVacia=1;
  94  193  				cout<<"      SALE Administrador"<<id<<endl;	
  95  197  				habVacia=0;
  96  200                                  adminAdentro=0;
  97  203                           }else{ if(cantEst >= cantMax){
  98  208  				if(adminAdentro==0){
  99  212  				cout<<"      Entra Administrador"<<id<<" logra ingresar"<<endl;
 100  217  				cout<<"      Termina la fiesta Administrador"<<id<<endl;	
 101  221  				terminaFiesta=1;
 102  224  				adminAdentro=1;
 103  227  				}
 104  227  				cout<<"      Revisa Administrador"<<id<<endl;	
 105  231  				
 106  231  				wait(adminIN);
 107  233  				if(habVacia==0){
 108  237  					cout<<"      SALE Administrador"<<id<<endl;
 109  241  					adminAdentro=0;
 110  244  					signal(adminIN);
 111  246  				}else{
 112  247  					if(cantEst!=0){
 113  251  					  signal(estSale);
 114  253  					}
 115  253  				}
 116  253  				
 117  253  
 118  253                                }else{ 
 119  254  				cout<<"      Administrador "<<id<<" acceso denegado"<<endl;
 120  259  				signal(acceso);
 121  261  				break;
 122  262                                }
 123  262  				//cout<<"      Administrador "<<id<<" acceso denegado"<<endl;
 124  262  				//
 125  262  			}
 126  262  			signal(acceso);
 127  264  		  
 128  264   }  //while 
 129  265  }
 130  266  void main(){
 131  267     cobegin{
 132  268                  estudiante(1);estudiante(2);estudiante(3);estudiante(4);
 133  284  		administrador(99);
 134  288       }
 135  289  }
