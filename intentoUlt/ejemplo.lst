BACI System: C-- to PCODE Compiler, 12:29  18 Jul 2004
Source file: C:\jbaci\examples\trabajoGrup\intentoUlt\ejemplo.cm  Sun Oct 24 13:45:36 2021
 line  pc
   1    0  semaphore acceso=1; //puerta
   2    0  semaphore adminIN=1; //administrador
   3    0  semaphore estSale=0;
   4    0  int adminAdentro=0;
   5    0  int habVacia=0;
   6    0  int cantEst=0;
   7    0  int cantMax=2;//varia
   8    0  int numRandom;
   9    0  int terminaFiesta=0;// no es seguro
  10    0  
  11    0  void estudiante(int id){
  12    0  //int x=0;
  13    0                 
  14    0  		wait(acceso);
  15    2  		
  16    2  		cout<<"Intenta ingresar Estudiante"<<id<<endl;
  17    6  		if(adminAdentro==1){
  18   10  			cout<<"Acceso denegado Estudiante  "<<id<<endl;
  19   14    			//wait(estSale);  //se hace un proceso critico
  20   14  			signal(acceso); //dentro del proceso critico liberamos otro (se contradice)
  21   16  			wait(estSale);
  22   18  			}else{  
  23   19  				cout<<"Entra Estudiante "<<id <<" a la habitacion"<<'\n';
  24   25  				habVacia=1;
  25   28  				cantEst++;
  26   33  				cout<<"Hay " <<cantEst<< " estudiantes"<<'\n';
  27   39  				signal(estSale);
  28   41  				signal(acceso);
  29   43  				
  30   43  				
  31   43  				
  32   43  				//signal(estSale);
  33   43  				//signal(acceso);
  34   43                               }
  35   43  //fuera de else
  36   43                               wait(estSale); //si es asi se debe liberar el para no alterar el semaphoro
  37   45                                 if(habVacia==1){
  38   49  				cout<<" LIIIIIBBBEERRAA "<<id<<'\n';
  39   54  				numRandom = random(3);
  40   58  				if((terminaFiesta==1)||numRandom==0){
  41   66  					cout<<"Sale Estudiante "<<id <<" de la habitacion"<<'\n';
  42   72  					cantEst--;
  43   77  					cout<<"Hay " <<cantEst<< " estudiantes"<<'\n';
  44   83  					if(cantEst==0){
  45   87  						habVacia=0; //administrador pueda entrar
  46   90  						signal(adminIN);
  47   92  						}else{
  48   93  						signal(estSale);
  49   95  						}
  50   95  					
  51   95                                    }
  52   95                                } //IF habVacia
  53   95     // signal(estSale);
  54   95  }
  55   96  void administrador(int id){
  56   96   while(1){
  57   98                     wait(acceso);  //
  58  100  		    cout<<"	Administrador "<<id<<" intenta ingresar"<<endl;
  59  105  			if(habVacia==0){
  60  109  				cout<<"      Entra Administrador"<<id<<endl;	
  61  113  				cout<<"      Revisa Administrador"<<id<<endl;				
  62  117  				adminAdentro=1;
  63  120  				habVacia=1;
  64  123  				cout<<"      SALE Administrador"<<id<<endl;	
  65  127  				habVacia=0;
  66  130                                  adminAdentro=0;
  67  133                           }else if(cantEst >= cantMax){
  68  138  				cout<<"      Entra Administrador"<<id<<" logra ingresar"<<endl;
  69  143  				cout<<"      Termina la fiesta Administrador"<<id<<endl;	
  70  147  				cout<<"      Revisa Administrador"<<id<<endl;	
  71  151  				terminaFiesta=1;
  72  154  				adminAdentro=1;
  73  157  				//controlar si esta vacia para salir
  74  157  				wait(adminIN);
  75  159  				if(habVacia==0){
  76  163  				  cout<<"      SALE Administrador"<<id<<endl;	
  77  167  				  adminAdentro=0;
  78  170  				  signal(adminIN);
  79  172  				}else{
  80  173  				  //cout<<" LIIIIIBBBEERRAA"<<id<<'\n';
  81  173  				  signal(estSale);
  82  175  				}
  83  175  				
  84  175                                }else{ 
  85  176  				cout<<"      Administrador "<<id<<" acceso denegado"<<endl;
  86  181                                }
  87  181  		  signal(acceso);
  88  183   }   
  89  184  }
  90  185  void main(){
  91  186     cobegin{
  92  187                  estudiante(1);estudiante(2);estudiante(3);estudiante(4);
  93  203  		administrador(99);
  94  207       }
  95  208  }
