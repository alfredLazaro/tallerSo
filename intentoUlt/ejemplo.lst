BACI System: C-- to PCODE Compiler, 12:29  18 Jul 2004
Source file: C:\jbaci\examples\trabajoGrup\intentoUlt\ejemplo.cm  Sun Oct 24 22:10:10 2021
 line  pc
   1    0  semaphore acceso=1; //puerta
   2    0  semaphore adminIN=1; //administrador
   3    0  semaphore estSale=2;
   4    0  int adminAdentro=0;
   5    0  int habVacia=0;
   6    0  int cantEst=0;
   7    0  int cantMax=2;//varia
   8    0  int numRandom;
   9    0  int terminaFiesta=0;// no es seguro
  10    0  int ultSal=0;
  11    0  void estudiante(int id){
  12    0  //int x=0;
  13    0                 
  14    0  		wait(acceso);
  15    2  		
  16    2  		cout<<"Intenta ingresar Estudiante"<<id<<endl;
  17    6  		if(adminAdentro==1){
  18   10  			cout<<"Acceso denegado Estudiante  "<<id<<endl;
  19   14    			//wait(estSale);  //se hace un proceso critico
  20   14  			signal(acceso); //dentro del proceso critico liberamos otro (se contradice)
  21   16  			wait(estSale);
  22   18  			}else{  
  23   19  				cout<<"Entra Estudiante "<<id <<" a la habitacion"<<'\n';
  24   25  				habVacia=1;
  25   28  				cantEst++;
  26   33  				cout<<"Hay " <<cantEst<< " estudiantes"<<'\n';
  27   39  				
  28   39  				signal(acceso);  //entra y puede entrar otro
  29   41  				
  30   41                               } //else estEntra
  31   41  //fuera de else
  32   41                               wait(estSale);
  33   43                                 if(habVacia==1){
  34   47  				cout<<"	IIISalir "<<id<<" Estudiante"<<'\n';
  35   53  				numRandom = random(3);
  36   57  				if(numRandom==0){   //no hace la comparacion con terminaFies
  37   61  					cout<<"Sale Estudiante "<<id <<" de la habitacion"<<'\n';
  38   67  					cantEst--;
  39   72  					cout<<"Hay " <<cantEst<< " estudiantes"<<'\n';
  40   78  					if(cantEst==0){
  41   82  						habVacia=0; //administrador pueda entrar
  42   85  						cout<<"TODOS salieron"<<endl;
  43   87  						signal(adminIN);
  44   89  						}else{
  45   90  						  signal(estSale); //todavia puede salir otro estudiante
  46   92  						}
  47   92  					
  48   92  					
  49   92                                   }else{  
  50   93  					while(1){
  51   95  					  if(terminaFiesta==1 || (id!=ultSal)){
  52  103  						cout<<"Sale Estudiante "<<id <<" de la habitacion"<<'\n';
  53  109  						cantEst--;
  54  114  						cout<<"Hay " <<cantEst<< " estudiantes"<<'\n';
  55  120  						if(cantEst==0){
  56  124  						  habVacia=0; //administrador pueda entrar
  57  127  						  terminaFiesta=0;
  58  130  						  cout<<"TODOS salieron"<<endl;
  59  132  						  ultSal=id;  //no debe poder salir de nuevo
  60  135  						  signal(adminIN);
  61  137  						  
  62  137  						}else{
  63  138  						  //signal(estSale); //todavia puede salir otro estudiante
  64  138  						  signal(adminIN);  //el admin intente salir y libere no asegura que pase estSale=-1
  65  140  						  ultSal=id;
  66  143  						}//cantEs
  67  143  						//sigue habiendo estudiantes
  68  143  						
  69  143  						//break;//creo que deberia haber un wait
  70  143  					   }else{signal(adminIN);  cout<<"  NO Sale "<<id<<" Estudiante"<<'\n';break;  }//pausar el sale
  71  153  						//se sigue reduciendo el estSal (PROBLEMA)
  72  153  					}//while
  73  154  						
  74  154  					}//si no sale? else
  75  154                                } //IF habVacia
  76  154                
  77  154     // signal(estSale);
  78  154  }
  79  155  void administrador(int id){
  80  155   while(1){
  81  157                     wait(acceso);  //
  82  159  	if(adminAdentro==0){
  83  163  		    cout<<"	Administrador "<<id<<" intenta ingresar"<<endl;
  84  168  	}
  85  168  			if(habVacia==0){
  86  172  				if(adminAdentro==0){
  87  176  				cout<<"      Entra Administrador"<<id<<endl;	
  88  180  				cout<<"      Revisa Administrador"<<id<<endl;				
  89  184  				adminAdentro=1;
  90  187  				}
  91  187  				habVacia=1;
  92  190  				cout<<"      SALE Administrador"<<id<<endl;	
  93  194  				habVacia=0;
  94  197                                  adminAdentro=0;
  95  200                           }else{ if(cantEst >= cantMax){
  96  205  				if(adminAdentro==0){
  97  209  				cout<<"      Entra Administrador"<<id<<" logra ingresar"<<endl;
  98  214  				cout<<"      Termina la fiesta Administrador"<<id<<endl;	
  99  218  				terminaFiesta=1;
 100  221  				adminAdentro=1;
 101  224  				}
 102  224  				cout<<"      Revisa Administrador"<<id<<endl;	
 103  228  				
 104  228  				wait(adminIN);
 105  230  				if(habVacia==0){
 106  234  					cout<<"      SALE Administrador"<<id<<endl;
 107  238  					adminAdentro=0;
 108  241  					signal(adminIN);
 109  243  				}else{
 110  244  					if(cantEst!=0){
 111  248  					  signal(estSale);
 112  250  					}
 113  250  				}
 114  250  				
 115  250  
 116  250                                }else{ 
 117  251  				cout<<"      Administrador "<<id<<" acceso denegado"<<endl;
 118  256  				signal(acceso);
 119  258  				break;
 120  259                                }
 121  259  				//cout<<"      Administrador "<<id<<" acceso denegado"<<endl;
 122  259  				//
 123  259  			}
 124  259  			signal(acceso);
 125  261  		  
 126  261   }  //while 
 127  262  }
 128  263  void main(){
 129  264     cobegin{
 130  265                  estudiante(1);estudiante(2);estudiante(3);estudiante(4);
 131  281  		administrador(99);
 132  285       }
 133  286  }
