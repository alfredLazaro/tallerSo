BACI System: C-- to PCODE Compiler, 12:29  18 Jul 2004
Source file: C:\jbaci\examples\trabajoGrup\intentoUlt\ejemplo.cm  Sun Oct 24 20:52:10 2021
 line  pc
   1    0  semaphore acceso=1; //puerta
   2    0  semaphore adminIN=1; //administrador
   3    0  semaphore estSale=1;
   4    0  int adminAdentro=0;
   5    0  int habVacia=0;
   6    0  int cantEst=0;
   7    0  int cantMax=2;//varia
   8    0  int numRandom;
   9    0  int terminaFiesta=0;// no es seguro
  10    0  
  11    0  void estudiante(int id){
  12    0  //int x=0;
  13    0                 
  14    0  		wait(acceso);
  15    2  		
  16    2  		cout<<"Intenta ingresar Estudiante"<<id<<endl;
  17    6  		if(adminAdentro==1){
  18   10  			cout<<"Acceso denegado Estudiante  "<<id<<endl;
  19   14    			//wait(estSale);  //se hace un proceso critico
  20   14  			signal(acceso); //dentro del proceso critico liberamos otro (se contradice)
  21   16  			wait(estSale);
  22   18  			}else{  
  23   19  				cout<<"Entra Estudiante "<<id <<" a la habitacion"<<'\n';
  24   25  				habVacia=1;
  25   28  				cantEst++;
  26   33  				cout<<"Hay " <<cantEst<< " estudiantes"<<'\n';
  27   39  				
  28   39  				signal(acceso);  //entra y puede entrar otro
  29   41  				
  30   41                               } //else estEntra
  31   41  //fuera de else
  32   41                               wait(estSale);
  33   43                                 if(habVacia==1){
  34   47  				cout<<"	IIISalir "<<id<<" Estudiante"<<'\n';
  35   53  				numRandom = random(3);
  36   57  				if(numRandom==0){   //no hace la comparacion con terminaFies
  37   61  					cout<<"Sale Estudiante "<<id <<" de la habitacion"<<'\n';
  38   67  					cantEst--;
  39   72  					cout<<"Hay " <<cantEst<< " estudiantes"<<'\n';
  40   78  					if(cantEst==0){
  41   82  						habVacia=0; //administrador pueda entrar
  42   85  						signal(adminIN);
  43   87  						}else{
  44   88  						  signal(estSale); //todavia puede salir otro estudiante
  45   90  						}
  46   90  					
  47   90  					
  48   90                                   }else{  
  49   91  					while(1){
  50   93  					  if(terminaFiesta==1 || (cantEst!=0)){
  51  101  						cout<<"Sale Estudiante "<<id <<" de la habitacion"<<'\n';
  52  107  						cantEst--;
  53  112  						cout<<"Hay " <<cantEst<< " estudiantes"<<'\n';
  54  118  						if(cantEst==0){
  55  122  						  habVacia=0; //administrador pueda entrar
  56  125  						  signal(adminIN);
  57  127  						  cout<<"TODOS salieron"<<endl;
  58  129  						}else{
  59  130  						  //signal(estSale); //todavia puede salir otro estudiante
  60  130  						  signal(adminIN);  //el admin intente salir y libere 
  61  132  						}//cantEs
  62  132  						//sigue habiendo estudiantes
  63  132  						
  64  132  						//break;//creo que deberia haber un wait
  65  132  					   }else{cout<<"  NO Sale "<<id<<" Estudiante"<<'\n';break;  }//pausar el sale
  66  140  						
  67  140  					}//while
  68  141  						
  69  141  					}//si no sale? else
  70  141                                } //IF habVacia
  71  141                
  72  141     // signal(estSale);
  73  141  }
  74  142  void administrador(int id){
  75  142   while(1){
  76  144                     wait(acceso);  //
  77  146  	if(adminAdentro==0){
  78  150  		    cout<<"	Administrador "<<id<<" intenta ingresar"<<endl;
  79  155  	}
  80  155  			if(habVacia==0){
  81  159  				if(adminAdentro==0){
  82  163  				cout<<"      Entra Administrador"<<id<<endl;	
  83  167  				cout<<"      Revisa Administrador"<<id<<endl;				
  84  171  				adminAdentro=1;
  85  174  				}
  86  174  				habVacia=1;
  87  177  				cout<<"      SALE Administrador"<<id<<endl;	
  88  181  				habVacia=0;
  89  184                                  adminAdentro=0;
  90  187                           }else{ if(cantEst >= cantMax){
  91  192  				if(adminAdentro==0){
  92  196  				cout<<"      Entra Administrador"<<id<<" logra ingresar"<<endl;
  93  201  				cout<<"      Termina la fiesta Administrador"<<id<<endl;	
  94  205  				terminaFiesta=1;
  95  208  				adminAdentro=1;
  96  211  				}
  97  211  				cout<<"      Revisa Administrador"<<id<<endl;	
  98  215  				
  99  215  				wait(adminIN);
 100  217  				if(habVacia==0){
 101  221  					cout<<"      SALE Administrador"<<id<<endl;
 102  225  					adminAdentro=0;
 103  228  					signal(adminIN);
 104  230  				}else{
 105  231  					if(cantEst!=0){
 106  235  					  signal(estSale);
 107  237  					}
 108  237  				}
 109  237  				
 110  237  
 111  237                                }else{ 
 112  238  				cout<<"      Administrador "<<id<<" acceso denegado"<<endl;
 113  243  				signal(acceso);
 114  245  				break;
 115  246                                }
 116  246  				//cout<<"      Administrador "<<id<<" acceso denegado"<<endl;
 117  246  				//
 118  246  			}
 119  246  			signal(acceso);
 120  248  		  
 121  248   }  //while 
 122  249  }
 123  250  void main(){
 124  251     cobegin{
 125  252                  estudiante(1);estudiante(2);estudiante(3);estudiante(4);
 126  268  		administrador(99);
 127  272       }
 128  273  }
