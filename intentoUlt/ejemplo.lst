BACI System: C-- to PCODE Compiler, 12:29  18 Jul 2004
Source file: C:\jbaci\examples\trabajoGrup\intentoUlt\ejemplo.cm  Sun Oct 24 14:22:59 2021
 line  pc
   1    0  semaphore acceso=1; //puerta
   2    0  semaphore adminIN=1; //administrador
   3    0  semaphore estSale=1;
   4    0  int adminAdentro=0;
   5    0  int habVacia=0;
   6    0  int cantEst=0;
   7    0  int cantMax=2;//varia
   8    0  int numRandom;
   9    0  int terminaFiesta=0;// no es seguro
  10    0  
  11    0  void estudiante(int id){
  12    0  //int x=0;
  13    0                 
  14    0  		wait(acceso);
  15    2  		
  16    2  		cout<<"Intenta ingresar Estudiante"<<id<<endl;
  17    6  		if(adminAdentro==1){
  18   10  			cout<<"Acceso denegado Estudiante  "<<id<<endl;
  19   14    			//wait(estSale);  //se hace un proceso critico
  20   14  			signal(acceso); //dentro del proceso critico liberamos otro (se contradice)
  21   16  			wait(estSale);
  22   18  			}else{  
  23   19  				cout<<"Entra Estudiante "<<id <<" a la habitacion"<<'\n';
  24   25  				habVacia=1;
  25   28  				cantEst++;
  26   33  				cout<<"Hay " <<cantEst<< " estudiantes"<<'\n';
  27   39  				
  28   39  				signal(acceso);
  29   41  				
  30   41  				
  31   41  				
  32   41                               }
  33   41  //fuera de else
  34   41                               wait(estSale);
  35   43                                 if(habVacia==1){
  36   47  				cout<<"	IIISalir Estudiante"<<'\n';
  37   50  				numRandom = random(3);
  38   54  				if((terminaFiesta==1)||numRandom==0){   //no hace la comparacion con terminaFies
  39   62  					cout<<"Sale Estudiante "<<id <<" de la habitacion"<<'\n';
  40   68  					cantEst--;
  41   73  					cout<<"Hay " <<cantEst<< " estudiantes"<<'\n';
  42   79  					if(cantEst==0){
  43   83  						habVacia=0; //administrador pueda entrar
  44   86  						signal(adminIN);
  45   88  						}else{
  46   89  						signal(estSale);
  47   91  						}
  48   91  					
  49   91                                    } else{  cout<<"  NO Sale    "<<'\n';  signal(adminIN);  }//si no sale?
  50   97                                } //IF habVacia
  51   97     // signal(estSale);
  52   97  }
  53   98  void administrador(int id){
  54   98   while(1){
  55  100                     wait(acceso);  //
  56  102  		    cout<<"	Administrador "<<id<<" intenta ingresar"<<endl;
  57  107  			if(habVacia==0){
  58  111  				cout<<"      Entra Administrador"<<id<<endl;	
  59  115  				cout<<"      Revisa Administrador"<<id<<endl;				
  60  119  				adminAdentro=1;
  61  122  				habVacia=1;
  62  125  				cout<<"      SALE Administrador"<<id<<endl;	
  63  129  				habVacia=0;
  64  132                                  adminAdentro=0;
  65  135                           }else if(cantEst >= cantMax){
  66  140  				cout<<"      Entra Administrador"<<id<<" logra ingresar"<<endl;
  67  145  				cout<<"      Termina la fiesta Administrador"<<id<<endl;	
  68  149  				cout<<"      Revisa Administrador"<<id<<endl;	
  69  153  				terminaFiesta=1;
  70  156  				adminAdentro=1;
  71  159  				wait(adminIN);
  72  161  				if(habVacia==0){
  73  165  					cout<<"      SALE Administrador"<<id<<endl;
  74  169  					adminAdentro=0;
  75  172  					signal(adminIN);
  76  174  				}else{
  77  175  					signal(estSale);
  78  177  				}
  79  177  				
  80  177  
  81  177                                }else{ 
  82  178  				cout<<"      Administrador "<<id<<" acceso denegado"<<endl;
  83  183                                }
  84  183  		  signal(acceso);
  85  185   }   
  86  186  }
  87  187  void main(){
  88  188     cobegin{
  89  189                  estudiante(1);estudiante(2);estudiante(3);estudiante(4);
  90  205  		administrador(99);
  91  209       }
  92  210  }
